# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

env:
  OPEN_AI_KEY: ${{secrets.OPEN_AI_KEY}}

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest

    steps:

      - uses: 'actions/checkout@v3'

      - uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/1016932239877/locations/global/workloadIdentityPools/techwings-identity-pool/providers/github'
          service_account: 'techwings-editor@techwings-identity.iam.gserviceaccount.com'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
      - name: Build Docker Image with Maven
        run: mvn clean spring-boot:build-image
      - name: Configure gcloud docker
        run: gcloud auth configure-docker europe-west2-docker.pkg.dev --quiet
      - id: deploys-image-to-gcp
        run: docker push europe-west2-docker.pkg.dev/techwings-production/techwings-docker-registry/openai-service

#      - id: 'deploy'
#        uses: 'google-github-actions/deploy-cloudrun@v1'
#        with:
#          service: 'text-to-speech-api'
#          region: 'europe-west4'
#          image: 'europe-west2-docker.pkg.dev/techwings-production/techwings-docker-registry/text-to-speech-api:latest'

#      - name: 'Use output'
#        run: 'curl "${{ steps.deploy.outputs.url }}"'